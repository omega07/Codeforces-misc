    /* Life would be so easy if brute worked everytime */
    #include <bits/stdc++.h>
    #include <string.h>
    #define int long long
    #define itn int
    #define inf 1e9
    #define mod 1000000007
    #define pb push_back
    #define sortall(x) sort(x.begin(),x.end());
    #define fast ios_base :: sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
    using namespace std;
 
    int a[5000007];
    vector <int> v;
    /*bool sortinrev(const pair<int,int> &a,  const pair<int,int> &b)
    {
           return (a.first > b.first);
    }*/
    void seive()
    {
        for(int i=0;i<=5000000;i++)
        a[i] = 1;
 
        a[0]=a[1]=0;
        for(int i=2;i<=2500;i++)
        {
            if(a[i] == 1)
            {
                v.pb(i);
                for(int j=2*i;j<=5000000;j+=i)
                a[j] = 0;
            }
        }
 
        for(int i=2501;i<=5000000;i++)
        {
            if(a[i] == 1)
            v.pb(i);
        }
    }
    /*
    int palindrome (int n)
    {
        int x;
        string s = to_string(n);
        if(!(s.length()%2))
        x = s.length()/2 - 1;
        else
        x = s.length()/2;
 
        for(int i=0;i<=x;i++)
        {
            if(s[i] != s[s.length()-1-i])
            return 0;
        }
        return 1;
    }
 
 
    int nCr(int n,int r)
    {
        if(r>n)
            return 0;
        int k = r;
        if((n-r)<r)
            k = (n-r);
        int g = k;
        int ans = 1;
        for(int i=n;i>=n-k+1;i--)
        {
            ans *= i;
 
            if(ans%g == 0)
            {
                ans /= g;
                g--;
            }
        }
        while(g>=1)
        {
            ans /= g;
            g--;
        }
 
        return ans;
 
    }
 
 
    int fpow(int a,int n)
    {
        if(n == 1)
        return a;
 
        if(n%2)
        return (a%mod * fpow(a,n-1)%mod)%mod;
        return (fpow(a,n/2)%mod * fpow(a,n/2)%mod)%mod;
    }
    */
    string shorter(string s,string t)
    {
        if(t.length()<s.length())
            return t;
        return s;
    }
    bool linear_search(vector<int>&v,int n)
    {
        for(int i=0;i<v.size();i++)
        {
            if(v[i] == n)
                return true;
 
        }
        return false;
 
    }
    int32_t main() {
 
        fast;
        int n;
        cin>>n;
        vector< pair<int,int> >v;
        v.reserve(n);
        int a[n] = {0};
        for(int i=0;i<n;i++)
        {
            int x,y;
            cin>>x>>y;
            v.pb({x,y});
            if(x == 0)
                a[1] = y;
            if(y == 0)
                a[n-2] = x;
        }
        sortall(v);
        vector<int>v1;
        for(int i=0;i<n;i++)
            v1.pb(v[i].first);
        for(int i=1;i<n-2;)
        {
            int k = lower_bound(v1.begin(),v1.end(),a[i])-v1.begin();
            a[i+2] = v[k].second;
 
            i+=2;
        }
        sortall(v);
        map<int,int>mp;
        for(int i=0;i<n;i++)
        {
            mp[v[i].first] ++;
            mp[v[i].second] ++;
        }
 
        int only,only1;
        map<int,int> :: iterator j;
        for(map<int,int> :: iterator i = mp.begin();i != mp.end();i++)
        {
            if(i->second == 1)
            {
                only = i->first;
                j = i;
                goto x;
            }
        }
        x:
            ;
 
           for(map<int,int> :: iterator i = ++j;i != mp.end();i++)
            {
                if(i->second == 1)
                    only1 = i->first;
 
            }
 
        int k = -1;
        for(int i=0;i<v.size();i++)
        {
            if(v[i].first == only)
            {
                k = v[i].second;
            }
        }
 
        if(k != -1)
        {
            a[0] = only;
            a[n-1] = only1;
            a[2] = k;
        }
        else
        {
            a[n-1] = only;
            a[0] = only1;
        }
        //cout<<only<<" "<<only1<<"\n";
        for(int i=2;i<n-2;i+=2)
        {
            int h = lower_bound(v1.begin(),v1.end(),a[i-2])-v1.begin();
            a[i] = v[h].second;
        }
 
 
        for(int i=0;i<n;i++)
            cout<<a[i]<<" ";
 
    }
