/*
LIFE WOULD BE SO BEAUTIFUL IF BRUTE WORKED EVERYTIME
*/
#include <bits/stdc++.h>
#include <string.h>
#define int long long
#define MAX 1000
#define itn int
#define inf 1e9
#define mod 1000000007
#define pb push_back
#define all(x) x.begin(),x.end()
#define sitr set<int> :: iterator
#define mitr map<int,int> :: iterator
#define pii pair<int,int>
#define vii vector<pii>
#define vi vector<int>
#define sortall(x) sort(x.begin(),x.end());
#define fast ios_base :: sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
using namespace std;
/*
int a[1000007];
vi v;
void seive()
{
    for(int i=0;i<=1000000;i++)
    a[i] = 1;

    a[0]=a[1]=0;
    for(int i=2;i<=1000;i++)
    {
        if(a[i] == 1)
        {
            v.pb(i);
            for(int j=2*i;j<=1000000;j+=i)
            a[j] = 0;
        }
    }

    for(int i=1001;i<=1000000;i++)
    {
        if(a[i] == 1)
        v.pb(i);
    }
}
*/
//int palindrome (int n){int x;string s = tostring(n); if(!(s.length()%2)) x = s.length()/2 - 1; else x = s.length()/2; for(int i=0;i<=x;i++) {if(s[i] != s[s.length()-1-i]) return 0; } return 1; }
//int nCr(int n,int r){if(r>n) return 0;  int k = r; if((n-r)<r) k = (n-r); int g = k; int ans = 1; for(int i=n;i>=n-k+1;i--) { ans *= i; if(ans%g == 0){ans /= g; g--;}} while(g>=1) { ans /= g; g--;} return ans;}
//int fpow(int a,int n){if(n == 1) return a; if(n%2) return (a%mod * fpow(a,n-1)%mod)%mod; return (fpow(a,n/2)%mod * fpow(a,n/2)%mod)%mod;}
//int toint(const string &s) {stringstream ss; ss << s; int x; ss >> x; return x;}
//string tostring ( int number ){stringstream ss; ss<< number; return ss.str();}
//int fact(int n){int ans = 1;if(n == 0 || n == 1) return 1; for(int i=2;i<=n;i++) ans *= i; return ans;}


int32_t main(){
    fast;
    int n;
    cin>>n;
    int a[n];
    vi v;
    for(int i=0;i<n;i++)
        cin>>a[i];

    for(int i=0;i<=1000000;i++)
        v.pb(i*i);
    vii v1;
    for(int i=0;i<n;i++)
    {
        int x = *lower_bound(v.begin(),v.end(),a[i])-a[i];
        int z = lower_bound(v.begin(),v.end(),a[i])-v.begin()-1;
        int y;
        if(z == -1)
            y = x;
        else
            y = a[i]-v[z];

        //cout<<x<<" "<<y<<" "<<z<<"\n";
        v1.pb({min(x,y),a[i]});
        //cout<<v1[i]<<" ";
    }
    sort(all(v1));

    int ans = 0;
    for(int i=0;i<v1.size()/2;i++)
    {
        ans += v1[i].first;
    }

    for(int i=v1.size()/2;i<v1.size();i++)
    {
        if(v1[i].first == 0 && v1[i].second == 0)
            ans += 2;
        else
        if(v1[i].first == 0)
            ans += 1;
    }
    cout<<ans;
    return 0;
}
